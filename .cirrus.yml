compute_engine_instance:
  image_project: cirrus-images
  image: family/docker-builder
  platform: linux
  cpu: 8
  memory: 16G

env:
  CROSS_COMPILE: riscv64-linux-gnu-
  ARCH: riscv
  SKIP_INSTALL_PACKAGE: no
  HOME: /tmp/cirrus-ci-build/
  OUT_DIR: /tmp/cirrus-ci-build/output
  DEVICE: /dev/loop100
  DISTURB: deepin
  DEEPIN_REPO: https://mirror.iscas.ac.cn/deepin-riscv/deepin-stage1/
  DEEPIN_BASE_ROOTFS: https://mirror.iscas.ac.cn/deepin-riscv/deepin-stage1/deepin-beige-stage1-dde.tar.gz
  KBUILD_BUILD_USER: deepin-riscv-sig
  KBUILD_BUILD_HOST: deepin-riscv-builder
  GITHUB_TOKEN: ENCRYPTED[7aafa8514d8601470288e2ca86822fba2941bf8504b44c611731a5f22151f9ed4c807842a56f3a8a028e1e65ed1d3a03]

task:
  machine_init_script: |
    scripts/machine_init.sh

  install_qemu_script: |
    scripts/qemu_setup.sh

  install_build_script: |
    scripts/install_deps.sh


  matrix:

    - name: visionfive-2
      env:
        base_path: visionfive-2
        kernel_branch: JH7110_VisionFive2_devel
        kernel_git: https://github.com/Zeno-sole/linux
        kernel_config: starfive_visionfive2_defconfig
      kernel_script: |
        git clone --depth=1 -b ${kernel_branch} ${kernel_git} kernel
        pushd kernel
          make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv ${kernel_config}
          if [ -f ../${base_path}/kernelconfig ]; then
            cp -v ../${base_path}/kernelconfig .config
          fi
          make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv -j$(nproc)
          if [ x"$(cat .config | grep CONFIG_MODULES=y)" = x"CONFIG_MODULES=y" ]; then
            make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv INSTALL_MOD_PATH=../rootfs/ modules_install -j$(nproc)
          fi
          # make CROSS_COMPILE=riscv64-linux-gnu- ARCH=riscv INSTALL_PATH=../rootfs/boot zinstall -j$(nproc)
          # Install DTB
          cp -v arch/riscv/boot/dts/starfive/jh7110-visionfive-v2.dtb ../rootfs/boot/
          cp -v .config ../rootfs/boot/latest-config

          # Install Kernel
          cp -v arch/riscv/boot/Image ../rootfs/boot/
          cp -v arch/riscv/boot/Image.gz ../rootfs/boot/
          ls -al ../rootfs/boot/
        popd

      install_uboot_script: |
        cp -v $base_path/vf2_uEnv.txt rootfs/boot/

    
  clean_rootfs_script: |
    scripts/clean_rootfs.sh


  kernel_build_artifacts:
    path: "${DISTURB}-kernel-${base_path}-*.tar.zst"


